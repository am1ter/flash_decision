[tool.poetry]
name = "app"
version = "1.0.0"
description = "Application for training securities trading skills"
authors = ["Aleksei Semenov <amiter@yandex.ru>"]

[tool.poetry.scripts]
app="app.main:run"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.95.2"
uvicorn = "0.21.1"
sqlalchemy = "2.0.15"
asyncpg = "0.27.0"
pandas = {extras = ["aws", "performance"], version = "2.0.2"}
structlog = "23.1.0"
python-dotenv = "1.0.0"
rich = "13.3.5"
asgi-logger = "0.1.0"
pydantic = "1.10.8"
alembic = "1.11.1"
python-json-logger = "2.0.7"
attrs = "23.1.0"
email-validator = "2.0.0.post2"
python-jose = {extras = ["cryptography"], version = "3.3.0"}
python-multipart = "0.0.6"
argon2-cffi = "21.3.0"
alpha-vantage = "2.3.1"
pyarrow = "12.0.1"
redis = {extras = ["hiredis"], version = "4.6.0"}
types-redis = "4.6.0.2"
httpx = "0.24.1"
uuid6 = "2023.5.2"
pymongo = "4.4.1"
plotly = "5.15.0"

[tool.poetry.group.dev.dependencies]
mypy = "1.4.1"
ruff = "0.0.277"
black = "23.3.0"
pre-commit = "3.3.2"
isort = "5.12.0"

[tool.poetry.group.tests.dependencies]
requests = "2.31.0"
selenium = "4.9.1"
webdriver-manager = "3.8.6"
types-requests = "2.31.0.0"
aiosqlite = "0.19.0"
pytest = "7.3.2"
pytest-asyncio = "0.21.0"
pytest-dependency = "0.5.1"
authlib = "1.2.1"
pytest-rerunfailures = "12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
exclude = []
mypy_path="backend"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
select = [
    "A",
    "B",
    "C",
    "E",
    "F",
    "G",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
ignore = [
    "A002",
    "A003",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN401",
    "ARG001",
    "ARG002",
    "B008",
    "COM812",
    "DTZ003",
    "E402",
    "E501",
    "EM102",
    "F541",
    "INP001",
    "N812",
    "PLR0913",
    "PLR2004",
    "PT009",
    "PT018",
    "RET504",
    "RET505",
    "S101",
    "S113",
    "S311",
    "SIM300",
    "SLF001",
    "TCH002",
    "TRY003",
]
fixable = [
    "A",
    "B",
    "C",
    "E",
    "F",
    "G",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
line-length = 100

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
profile = "black"
src_paths = ["app/"]
known_first_party = ["e2e", "app", "tests"]
known_third_party = ["fastapi"]
