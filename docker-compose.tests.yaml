# IMPORTANT!
# Use `--env-file` agument during build with `docker compose` to set arguments for Dockerfiles
# Example: docker compose --env-file=.env.tests --env-file=.env.secrets -f ./docker-compose.tests.yaml up -d --build

services:
  # Run database
  fd_sql_tests:
    build:
      context: ./backend/
      dockerfile: Dockerfile.sql
    container_name: fd_sql_tests
    restart: "no"
    env_file:
      - .env.tests
      - .env.secrets
    environment:
      - POSTGRES_PASSWORD=${SQL_PASS}
      - PGPORT=${SQL_PORT}
    networks:
      - tests
    tmpfs:
      - /var/lib/postgresql/data

  # Run container with database
  fd_redis_tests:
    image: "redis/redis-stack:latest"
    container_name: fd_redis_tests
    restart: "no"
    env_file:
      - .env.secrets
    environment:
      - REDIS_ARGS=--requirepass ${CACHE_REDIS_PASS}
    networks:
      - tests

  # Basic defention for containers with python
  fd_tmpl_tests:
    build:
      context: ./backend/
      dockerfile: Dockerfile.backend
    command: []
    restart: "no"
    env_file:
      - .env.tests
      - .env.secrets
    environment:
      - BACKEND_HOST=fd_backend_tests
      - SQL_HOST=fd_sql_tests
      - CACHE_REDIS_HOST=fd_redis_tests
    networks:
      - tests
    volumes:
      - ./backend/app:/usr/src/backend/app
      - ./backend/tests:/usr/src/backend/tests

  # Apply sql migrations
  fd_migrations_tests:
    extends:
      service: fd_tmpl_tests
    container_name: fd_migrations_tests
    command: poetry run alembic --name ${ENVIRONMENT} upgrade head
    depends_on:
      - fd_sql_tests

  # Run webserver with backend (API)
  fd_backend_tests:
    extends:
      service: fd_migrations_tests
    container_name: fd_backend_tests
    command: poetry run app
    depends_on:
      fd_redis_tests:
        condition: service_started
      fd_migrations_tests:
        condition: service_completed_successfully

  # Run tests when test environment is ready
  fd_tests:
    extends:
      service: fd_migrations_tests
    container_name: fd_tests
    command: poetry run pytest --reruns 1 --reruns-delay 60 --only-rerun ProviderRateLimitExceededError --only-rerun ProviderAccessError
    depends_on:
      - fd_backend_tests

# Tests use isolated docker network
networks:
  tests:
    driver: bridge
